generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  telephone String    @unique
  password  String?
  sessions  Session[]
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  sessionToken String   @unique
  userId       String
  telephone    String?
  password     String?
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Category {
  id        String    @id @default(cuid())
  name      String
  imageUrl  String
  services  Service[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("categorys")
}

model Service {
  id          String    @id @default(uuid())
  name        String
  description String
  imageUrl    String
  price       Decimal   @db.Decimal(10, 2)
  bookings    Booking[]
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String

  @@map("services")
}

model Booking {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  serviceId String
  service   Service  @relation(fields: [serviceId], references: [id])
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}

model Times {
  id   String @id @default(uuid())
  time String @unique

  @@map("times")
}

model UnusualDay {
  id    String   @id @default(uuid())
  open  DateTime
  close DateTime
  @@map("unusual_times")
}

model State {
  id        Int      @id @default(autoincrement())
  isActive  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
